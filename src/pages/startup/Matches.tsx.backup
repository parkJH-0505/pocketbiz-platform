
import React, { useState } from 'react';
import { Target, RotateCcw, Calendar, Bell } from 'lucide-react';
import NowActionTab from './smartMatching/NowActionTab';
import ProgressTab from './smartMatching/ProgressTab';
import PipelineTab from './smartMatching/PipelineTab';
import NotificationModal from './smartMatching/NotificationModal';

type TabType = 'now' | 'progress' | 'pipeline';

const SmartMatching = () => {
  const [activeTab, setActiveTab] = useState<TabType>('now');
  const [showNotificationModal, setShowNotificationModal] = useState(false);

  const tabs = [
    {
      id: 'now' as TabType,
      label: '지금 액션',
      icon: Target,
      description: '로드맵 기반 최적 액션'
    },
    {
      id: 'progress' as TabType,
      label: '진행 현황',
      icon: RotateCcw,
      description: '진행 중인 프로그램 추적'
    },
    {
      id: 'pipeline' as TabType,
      label: '향후 파이프라인',
      icon: Calendar,
      description: '3-6개월 미래 기회'
    }
  ];

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between py-6">
            <div>
              <h1 className="text-2xl font-bold text-gray-900">스마트 매칭</h1>
              <p className="text-gray-600 mt-1">나만의 성장 네비게이터</p>
            </div>
          </div>
        </div>
      </div>

      {/* Tab Navigation */}
      <div className="bg-white border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <nav className="flex space-x-8" aria-label="Tabs">
            {tabs.map((tab) => {
              const Icon = tab.icon;
              const isActive = activeTab === tab.id;

              return (
                <button
                  key={tab.id}
                  onClick={() => setActiveTab(tab.id)}
                  className={`
                    flex items-center py-4 px-1 border-b-2 font-medium text-sm transition-colors
                    ${isActive
                      ? 'border-blue-500 text-blue-600'
                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                    }
                  `}
                >
                  <Icon className="w-5 h-5 mr-2" />
                  <div className="text-left">
                    <div className="font-medium">{tab.label}</div>
                    <div className="text-xs text-gray-400">{tab.description}</div>
                  </div>
                </button>
              );
            })}
          </nav>
        </div>
      </div>

      {/* Tab Content */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {activeTab === 'now' && (
          <NowActionTab onOpenNotification={() => setShowNotificationModal(true)} />
        )}
        {activeTab === 'progress' && <ProgressTab />}
        {activeTab === 'pipeline' && <PipelineTab />}
      </div>

      {/* Notification Modal */}
      {showNotificationModal && (
        <NotificationModal
          isOpen={showNotificationModal}
          onClose={() => setShowNotificationModal(false)}
        />
      )}
    </div>
  );
};

export default SmartMatching;